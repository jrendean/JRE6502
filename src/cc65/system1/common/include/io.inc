;https://github.com/grappendorf/homecomputer-6502/blob/748c43e96795b9f0a5946ac8117e01654bb7794e/firmware/io.inc65
;https://github.com/peternoyes/dodo/tree/master/src

.import __VIA1_START__
.import __VIA2_START__
.import __ACIA1_START__

VIA1_PORTB = __VIA1_START__ + 0
VIA1_PORTA = __VIA1_START__ + 1
VIA1_DDRB  = __VIA1_START__ + 2
VIA1_DDRA  = __VIA1_START__ + 3
VIA1_T1C_L = __VIA1_START__ + 4
VIA1_T1C_H = __VIA1_START__ + 5
VIA1_T1L_L = __VIA1_START__ + 6
VIA1_T1L_H = __VIA1_START__ + 7
VIA1_T2C_L = __VIA1_START__ + 8
VIA1_T2C_H = __VIA1_START__ + 9
VIA1_SR    = __VIA1_START__ + 10
VIA1_ACR   = __VIA1_START__ + 11
VIA1_PCR   = __VIA1_START__ + 12
VIA1_IFR   = __VIA1_START__ + 13
VIA1_IER   = __VIA1_START__ + 14
VIA1_PANH  = __VIA1_START__ + 15

VIA2_PORTB = __VIA2_START__ + 0
VIA2_PORTA = __VIA2_START__ + 1
VIA2_DDRB  = __VIA2_START__ + 2
VIA2_DDRA  = __VIA2_START__ + 3
VIA2_T1C_L = __VIA2_START__ + 4
VIA2_T1C_H = __VIA2_START__ + 5
VIA2_T1L_L = __VIA2_START__ + 6
VIA2_T1L_H = __VIA2_START__ + 7
VIA2_T2C_L = __VIA2_START__ + 8
VIA2_T2C_H = __VIA2_START__ + 9
VIA2_SR    = __VIA2_START__ + 10
VIA2_ACR   = __VIA2_START__ + 11
VIA2_PCR   = __VIA2_START__ + 12
VIA2_IFR   = __VIA2_START__ + 13
VIA2_IER   = __VIA2_START__ + 14
VIA2_PANH  = __VIA2_START__ + 15

; Port bits
VIA_P0 = 1 << 0
VIA_P1 = 1 << 1
VIA_P2 = 1 << 2
VIA_P3 = 1 << 3
VIA_P4 = 1 << 4
VIA_P5 = 1 << 5
VIA_P6 = 1 << 6
VIA_P7 = 1 << 7


LED_PORT  = VIA2_PORTA

SNES_PORT = VIA1_PORTB
SNES_DDR  = VIA1_DDRB

.if lcd_type=20
  ; built in 20x4
  LCD_DDR  = VIA2_DDRA
  LCD_PORT = VIA2_PORTA
.elseif lcd_type=40
  ; test 40x4
  LCD_DDR  = VIA1_DDRA
  LCD_PORT = VIA1_PORTA
.endif

PIN_LED = VIA_P0
LCD_E2 = VIA_P0
LCD_RS = VIA_P1
LCD_RW = VIA_P2
LCD_E1 = VIA_P3
LCD_D4 = VIA_P4
LCD_D5 = VIA_P5
LCD_D6 = VIA_P6
LCD_D7 = VIA_P7

PS2_CLK    = VIA_P0
PS2_DATA   = VIA_P1
SPI_CLK    = VIA_P2
SPI_MISO   = VIA_P3
SPI_MOSI   = VIA_P4
SPI_CS_SD  = VIA_P5
SPI_CS_RTC = VIA_P6
PIN_UNUSED = VIA_P7


SNES_CLK   = VIA_P0
SNES_LATCH = VIA_P1
SNES_DATA1 = VIA_P2
SNES_DATA2 = VIA_P3


ACIA1_DATA    = __ACIA1_START__ + $00
ACIA1_STATUS  = __ACIA1_START__ + $01
ACIA1_COMMAND = __ACIA1_START__ + $02
ACIA1_CONTROL = __ACIA1_START__ + $03

; ACIA control register bit values
ACIA_STOP_BITS_1 = %00000000
ACIA_STOP_BITS_2 = %10000000
ACIA_DATA_BITS_8 = %00000000
ACIA_DATA_BITS_7 = %00100000
ACIA_DATA_BITS_6 = %01000000
ACIA_DATA_BITS_5 = %01100000
ACIA_CLOCK_EXT   = %00000000
ACIA_CLOCK_INT   = %00010000
ACIA_BAUD_16XEXT = %00000000
ACIA_BAUD_50     = %00000001
ACIA_BAUD_75     = %00000010
ACIA_BAUD_109    = %00000011
ACIA_BAUD_134    = %00000100
ACIA_BAUD_150    = %00000101
ACIA_BAUD_300    = %00000110
ACIA_BAUD_600    = %00000111
ACIA_BAUD_1200   = %00001000
ACIA_BAUD_1800   = %00001001
ACIA_BAUD_2400   = %00001010
ACIA_BAUD_3600   = %00001011
ACIA_BAUD_4800   = %00001100
ACIA_BAUD_7200   = %00001101
ACIA_BAUD_9600   = %00001110
ACIA_BAUD_19200  = %00001111

; ACIA command register bit values
ACIA_PARITY_ODD              = %00000000
ACIA_PARITY_EVEN             = %01000000
ACIA_PARITY_MARK             = %10000000
ACIA_PARITY_SPACE            = %11000000
ACIA_PARITY_DISABLE          = %00000000
ACIA_PARITY_ENABLE           = %00100000
ACIA_ECHO_DISABLE            = %00000000
ACIA_ECHO_ENABLE             = %00010000
ACIA_TX_INT_DISABLE_RTS_HIGH = %00000000
ACIA_TX_INT_ENABLE_RTS_LOW   = %00000100
ACIA_TX_INT_DISABLE_RTS_LOW  = %00001000
ACIA_TX_INT_DISABLE_BREAK    = %00001100
ACIA_RX_INT_ENABLE           = %00000000
ACIA_RX_INT_DISABLE          = %00000010
ACIA_DTR_HIGH                = %00000000
ACIA_DTR_LOW                 = %00000001

; ACIA status register bit masks
ACIA_STATUS_IRQ        = 1 << 7
ACIA_STATUS_DSR        = 1 << 6
ACIA_STATUS_DCD        = 1 << 5
ACIA_STATUS_TX_EMPTY   = 1 << 4
ACIA_STATUS_RX_FULL    = 1 << 3
ACIA_STATUS_OVERRUN    = 1 << 2
ACIA_STATUS_FRAME_ERR  = 1 << 1
ACIA_STATUS_PARITY_ERR = 1 << 0